plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.sim'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // r2dbc
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    // r2dbc mysql
    implementation("io.asyncer:r2dbc-mysql:0.9.2")

    // jpa
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // jpa mysql
//    runtimeOnly 'com.mysql:mysql-connector-j'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    if (System.getProperty("os.arch") == "aarch64" && System.getProperty("os.name") == "Mac OS X") {
        runtimeOnly("io.netty:netty-resolver-dns-native-macos::osx-aarch_64")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
